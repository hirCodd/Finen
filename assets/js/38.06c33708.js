(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{387:function(p,r,o){"use strict";o.r(r);var t=o(14),i=Object(t.a)({},(function(){var p=this,r=p.$createElement,o=p._self._c||r;return o("ContentSlotsDistributor",{attrs:{"slot-key":p.$parent.slotKey}},[o("h2",{attrs:{id:"_6、配置文件加载位置"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_6、配置文件加载位置"}},[p._v("#")]),p._v(" 6、配置文件加载位置")]),p._v(" "),o("p",[p._v("springboot 启动会扫描以下位置的application.properties或者application.yml文件作为Spring boot的默认配置文件")]),p._v(" "),o("p",[p._v("–file:./config/")]),p._v(" "),o("p",[p._v("–file:./")]),p._v(" "),o("p",[p._v("–classpath:/config/")]),p._v(" "),o("p",[p._v("–classpath:/")]),p._v(" "),o("p",[p._v("优先级由高到底，高优先级的配置会覆盖低优先级的配置；")]),p._v(" "),o("p",[p._v("SpringBoot会从这四个位置全部加载主配置文件；"),o("strong",[p._v("互补配置")]),p._v("；")]),p._v(" "),o("p",[p._v("可以通过Spring.config.location来改变默认的配置文件位置")]),p._v(" "),o("p",[p._v("项目打包好以后，可以使用命令行参数的形式，启动项目的时候来指定配置文件的新位置；指定配置文件和默认加载的这些配置文件共同起作用行程互补配置；")]),p._v(" "),o("p",[p._v("==我们还可以通过spring.config.location来改变默认的配置文件位置==")]),p._v(" "),o("p",[o("strong",[p._v("项目打包好以后，我们可以使用命令行参数的形式，启动项目的时候来指定配置文件的新位置；指定配置文件和默认加载的这些配置文件共同起作用形成互补配置；")])]),p._v(" "),o("p",[p._v("java -jar spring-boot-02-config-02-0.0.1-SNAPSHOT.jar --spring.config.location=G:/application.properties")]),p._v(" "),o("h2",{attrs:{id:"_7、外部配置加载顺序"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_7、外部配置加载顺序"}},[p._v("#")]),p._v(" 7、外部配置加载顺序")]),p._v(" "),o("p",[o("strong",[p._v("==SpringBoot也可以从以下位置加载配置； 优先级从高到低；高优先级的配置覆盖低优先级的配置，所有的配置会形成互补配置==")])]),p._v(" "),o("p",[o("strong",[p._v("1.命令行参数")])]),p._v(" "),o("p",[p._v("所有的配置都可以在命令行上进行指定")]),p._v(" "),o("p",[p._v("java -jar spring-boot-02-config-02-0.0.1-SNAPSHOT.jar --server.port=8087  --server.context-path=/abc")]),p._v(" "),o("p",[p._v("多个配置用空格分开； --配置项=值")]),p._v(" "),o("p",[p._v("2.来自java:comp/env的JNDI属性")]),p._v(" "),o("p",[p._v("3.Java系统属性（System.getProperties()）")]),p._v(" "),o("p",[p._v("4.操作系统环境变量")]),p._v(" "),o("p",[p._v("5.RandomValuePropertySource配置的random.*属性值")]),p._v(" "),o("p",[p._v("=="),o("strong",[p._v("由jar包外向jar包内进行寻找；")]),p._v("==")]),p._v(" "),o("p",[p._v("=="),o("strong",[p._v("优先加载带profile")]),p._v("==")]),p._v(" "),o("p",[o("strong",[p._v("6.jar包外部的application-{profile}.properties或application.yml(带spring.profile)配置文件")])]),p._v(" "),o("p",[o("strong",[p._v("7.jar包内部的application-{profile}.properties或application.yml(带spring.profile)配置文件")])]),p._v(" "),o("p",[p._v("=="),o("strong",[p._v("再来加载不带profile")]),p._v("==")]),p._v(" "),o("p",[o("strong",[p._v("8.jar包外部的application.properties或application.yml(不带spring.profile)配置文件")])]),p._v(" "),o("p",[o("strong",[p._v("9.jar包内部的application.properties或application.yml(不带spring.profile)配置文件")])]),p._v(" "),o("p",[p._v("10.@Configuration注解类上的@PropertySource")]),p._v(" "),o("p",[p._v("11.通过SpringApplication.setDefaultProperties指定的默认属性")]),p._v(" "),o("p",[p._v("所有支持的配置加载来源；")]),p._v(" "),o("p",[o("a",{attrs:{href:"https://docs.spring.io/spring-boot/docs/1.5.9.RELEASE/reference/htmlsingle/#boot-features-external-config",target:"_blank",rel:"noopener noreferrer"}},[p._v("参考官方文档"),o("OutboundLink")],1)])])}),[],!1,null,null,null);r.default=i.exports}}]);